#!/usr/bin/env ruby

require_relative '../application'

require "slop"

def main
  opts = Slop.parse do |o|
    o.string '--config', "Config file path (default: #{Application::DEFAULT_CONFIG_FILE_PATH})"
    o.bool '-a', '--all', "Download and import everything - exchanges, symbols, EOD data, splits, dividends, fundamentals, options, etc."
    # o.bool '-b', '--bsym', 'Import Bloomberg Open Symbology - Exchanges and Symbols'
    o.bool '-d', '--download_dbs', "Download full database snapshots from Quandl."
    o.bool '-c', '--csi', 'Import CSI Data - Exchanges and Symbols'
    o.array '-o', '--options-zip-files', "Import historical option prices from the specified zip files downloaded from OptionData.net (see http://optiondata.net/)"
    o.bool '--quandl-bls', "Import BLS time series from Quandl's BLS databases (see https://www.quandl.com/data/BLSE/ and https://www.quandl.com/data/BLSP/)."
    o.bool '--quandl-census', "Import data on the American people, places, and economy, from Quandl's USCENSUS database (see https://www.quandl.com/data/USCENSUS/)."
    o.bool '--quandl-eod', "Import EOD prices, splits, and dividends for US traded stocks from Quandl's EOD database (see https://www.quandl.com/data/EOD/)."
    o.string '--quandl-eod-database', "Quandl EOD full database snapshot file path. (e.g. ./data/quandl_eod_database_20151222.zip)"
    o.bool '--quandl-fed', "Import economic statistics from Quandl's FED database (see https://www.quandl.com/data/FED/)."
    o.bool '--quandl-fred', "Import economic statistics from Quandl's FRED database (see https://www.quandl.com/data/FRED/)."
    o.bool '--quandl-fundamentals', "Import stock fundamentals for US traded stocks from Quandl's Core US Fundamentals database (see https://www.quandl.com/data/SF1/)."
    o.string '--quandl-fundamentals-database', "Quandl Core US Fundamentals full database snapshot file path. (e.g. ./data/quandl_fundamentals_database_20151222.zip)"
    o.bool '--quandl-treasury', "Import Treasury rates, yield curve rates, debt, tax revenues, etc., from Quandl's USCENSUS database (see https://www.quandl.com/data/USTREASURY/)."
    o.bool '--yahoo-eod', "Import EOD prices, splits, and dividends for stocks/ETFs/ETNs from Yahoo! Finance."
    o.on '--help' do
      puts o
      exit
    end
  end


  Application.load(opts[:config] || Application::DEFAULT_CONFIG_FILE_PATH)

  quandl_eod_client = QuandlEod::Client.new(Application.logger, opts[:quandl_eod_database])
  quandl_fundamentals_client = QuandlFundamentals::Client.new(Application.logger, opts[:quandl_fundamentals_database])

  if opts.download_dbs? || opts.all?
    begin
      Application.logger.info("Downloading Quandl EOD database.")
      quandl_eod_client.download_full_database
    rescue => e
      Application.logger.error("Unable to download Quandl EOD database (#{QuandlEod::Client::DATABASE_NAME}). Perhaps your subscription has run out? Error: #{e.message}")
    end

    begin
      Application.logger.info("Downloading Quandl Core US Fundamentals database.")
      quandl_fundamentals_client.download_full_database
    rescue => e
      Application.logger.error("Unable to download Quandl fundamentals database (#{QuandlFundamentals::Client::DATABASE_NAME}). Perhaps your subscription has run out? Error: #{e.message}")
    end
  end

  importer = ExchangesImporter.new
  importer.import

  # if opts.bsym? || opts.all?
  #   importer = BsymSecuritiesImporter.new
  #   importer.import
  # end

  if opts.csi? || opts.all?
    importer = CsiDataImporter.new
    importer.import
  end

  if opts.quandl_eod? || opts.all?
    importer = QuandlEodImporter.new(quandl_eod_client)
    importer.import
  end

  if opts.yahoo_eod? || opts.all?
     importer = YahooEodImporter.new
     importer.import

     importer = YahooSplitsAndDividendsImporter.new
     importer.import
  end

  if opts.quandl_fundamentals? || opts.all?
    importer = QuandlFundamentalsImporter.new(quandl_fundamentals_client)
    importer.import
  end

  if opts.quandl_bls? || opts.all?
    importer = QuandlBlsImporter.new
    importer.import
  end

  if opts.quandl_fed? || opts.all?
    importer = QuandlFedImporter.new
    importer.import
  end

  if opts.quandl_fred? || opts.all?
    importer = QuandlFredImporter.new
    importer.import
  end

  if opts.quandl_census? || opts.all?
    importer = QuandlUsCensusImporter.new
    importer.import
  end

  if opts.quandl_treasury? || opts.all?
    importer = QuandlUsTreasuryImporter.new
    importer.import
  end

  if opts.options_zip_files? || opts.all?
    importer = OptionDataImporter.new(opts[:options_zip_files])
    importer.import
  end

end

main if __FILE__ == $0
